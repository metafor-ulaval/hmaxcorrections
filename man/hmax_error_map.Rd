% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Roussel_et_al_2017.R
\name{hmax_error_map}
\alias{hmax_error_map}
\title{Max height error estimation map}
\usage{
hmax_error_map(las, res, at = c(1, 2, 5, 10), f = 5, normalize = FALSE)
}
\arguments{
\item{las}{LAS or LAScatalog from the lidR package. The point cloud must be normalized and
lake or any other non forested areas must, ideally, be removed.}

\item{res}{scalar. The resolution at which the estimation must be performed}

\item{at}{numeric. densities to predict}

\item{f}{scalar. factor.}

\item{normalize}{bool. Normalize on-the-fly if the dataset is not height normalized.}
}
\value{
A SpatRaster with a resolution f*res that tells, for each pixel the expected error on hmax
if hmax is computed in pixels of resolution 'res'.
}
\description{
This function evaluates, for a given pixel size the expected error made on the metrics hmax as a
function of the pulse density according to Roussel et al (2007) (see references). The metric hmax
is always underestimated because discrete laser pulses are statistically unlikely to hit the very
top of the canopy. The highest laser hit is necessarily below the theoretically highest point. How much?
It depends on the shape/complexity of the canopy and the sampling density. By evaluating the shape
of the canopy and using probability theory, it is possible to estimate the expected error made as
a function of the pulse density (see references).
}
\details{
While the original paper estimate the "shape" of the canopy for a given point cloud and consequently
assigns an error for the overall point cloud, this functions estimates the "shape" of the canopy locally
using pixels larger that the requested resolution. For example if user want to know the error on hmax
for 20x20 m pixels, using a factor of 5, then, the function will estimate the error using a
100x100 windows, i.e. 25 sub-pixel are used to estimate the error into the major 100x100 m pixel.
}
\examples{
library(lidR)
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
las = readLAS(LASfile)

shapefile_dir <- system.file("extdata", "lake_polygons_UTM17.shp", package = "lidR")
lakes = sf::st_read(shapefile_dir)
las = classify_poi(las, LASWATER, roi = lakes)
las = filter_poi(las, Classification != LASWATER)

map = hmax_error_map(las, 10)
q = quantile(map[], probs = 0.95, na.rm = TRUE)
map = terra::stretch(map, maxv = q)
plot(map)

}
\references{
Roussel, J.-R., Caspersen, J., Béland, M., Thomas, S., & Achim, A. (2017). Removing
bias from LiDAR-based estimates of canopy height: Accounting for the effects of pulse density and
footprint size. Remote Sensing of Environment, 198, 1–16. https://doi.org/10.1016/j.rse.2017.05.032
}
